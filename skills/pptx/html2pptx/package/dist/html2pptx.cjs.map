{"version":3,"file":"html2pptx.cjs","sources":["../src/constants.ts","../src/validation.ts","../src/extraction.ts","../src/slide-builder.ts","../src/getChromiumPath.ts","../src/index.ts"],"sourcesContent":["/**\n * Shared constants used throughout html2pptx\n */\n\nexport const PT_PER_PX = 0.75;\nexport const PX_PER_IN = 96;\nexport const EMU_PER_IN = 914400;\n","/**\n * Validation functions for html2pptx\n */\n\nimport type { Page } from 'playwright';\nimport type { PptxGenJS, BodyDimensions, SlideData } from './types.js';\nimport { PT_PER_PX, PX_PER_IN, EMU_PER_IN } from './constants.js';\n\n/**\n * Get body dimensions and check for overflow\n */\nexport async function getBodyDimensions(page: Page): Promise<BodyDimensions> {\n  const bodyDimensions = await page.evaluate(() => {\n    const body = document.body;\n    const style = window.getComputedStyle(body);\n\n    return {\n      width: parseFloat(style.width),\n      height: parseFloat(style.height),\n      scrollWidth: body.scrollWidth,\n      scrollHeight: body.scrollHeight,\n    };\n  });\n\n  const errors = [];\n  const widthOverflowPx = Math.max(0, bodyDimensions.scrollWidth - bodyDimensions.width - 1);\n  const heightOverflowPx = Math.max(0, bodyDimensions.scrollHeight - bodyDimensions.height - 1);\n\n  const widthOverflowPt = widthOverflowPx * PT_PER_PX;\n  const heightOverflowPt = heightOverflowPx * PT_PER_PX;\n\n  if (widthOverflowPt > 0 || heightOverflowPt > 0) {\n    const directions = [];\n    if (widthOverflowPt > 0) directions.push(`${widthOverflowPt.toFixed(1)}pt horizontally`);\n    if (heightOverflowPt > 0) directions.push(`${heightOverflowPt.toFixed(1)}pt vertically`);\n    const reminder =\n      heightOverflowPt > 0 ? ' (Remember: leave 0.5\" margin at bottom of slide)' : '';\n    errors.push(`HTML content overflows body by ${directions.join(' and ')}${reminder}`);\n  }\n\n  return { ...bodyDimensions, errors };\n}\n\n/**\n * Validate dimensions match presentation layout\n */\nexport function validateDimensions(bodyDimensions: BodyDimensions, pres: PptxGenJS): string[] {\n  const errors = [];\n  const widthInches = bodyDimensions.width / PX_PER_IN;\n  const heightInches = bodyDimensions.height / PX_PER_IN;\n\n  if (pres.presLayout) {\n    const layoutWidth = pres.presLayout.width / EMU_PER_IN;\n    const layoutHeight = pres.presLayout.height / EMU_PER_IN;\n\n    if (Math.abs(layoutWidth - widthInches) > 0.1 || Math.abs(layoutHeight - heightInches) > 0.1) {\n      errors.push(\n        `HTML dimensions (${widthInches.toFixed(1)}\" × ${heightInches.toFixed(1)}\") ` +\n          `don't match presentation layout (${layoutWidth.toFixed(1)}\" × ${layoutHeight.toFixed(1)}\")`\n      );\n    }\n  }\n  return errors;\n}\n\n/**\n * Validate text box positions are not too close to bottom edge\n */\nexport function validateTextBoxPosition(\n  slideData: SlideData,\n  bodyDimensions: BodyDimensions\n): string[] {\n  const errors = [];\n  const slideHeightInches = bodyDimensions.height / PX_PER_IN;\n  const minBottomMargin = 0.5; // 0.5 inches from bottom\n\n  for (const el of slideData.elements) {\n    // Check text elements (p, h1-h6, list)\n    if (['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'list'].includes(el.type)) {\n      // Type guard: el is now TextElement | ListElement (both have position)\n      if (el.type === 'line' || el.type === 'image' || el.type === 'shape') continue;\n\n      const fontSize = el.style?.fontSize || 0;\n      const bottomEdge = el.position.y + el.position.h;\n      const distanceFromBottom = slideHeightInches - bottomEdge;\n\n      if (fontSize > 12 && distanceFromBottom < minBottomMargin) {\n        const getText = () => {\n          if (el.type === 'list') return el.items.find((item) => item.text)?.text || '';\n          if (typeof el.text === 'string') return el.text;\n          if (Array.isArray(el.text)) return el.text.find((t) => t.text)?.text || '';\n          return '';\n        };\n        const textPrefix = getText().substring(0, 50) + (getText().length > 50 ? '...' : '');\n\n        errors.push(\n          `Text box \"${textPrefix}\" ends too close to bottom edge ` +\n            `(${distanceFromBottom.toFixed(2)}\" from bottom, minimum ${minBottomMargin}\" required)`\n        );\n      }\n    }\n  }\n\n  return errors;\n}\n","/**\n * Browser-side extraction functions for html2pptx\n *\n * Note: extractSlideData runs in the browser context via page.evaluate()\n * Helper functions are now in src/playwright/ and bundled via rollup\n */\n\nimport type { Page } from 'playwright';\nimport { dirname, join } from 'node:path';\nimport { fileURLToPath } from 'node:url';\nimport { packageDirectory } from 'pkg-dir';\nimport type { SlideData } from './types.js';\nimport type { ExtractSlideDataType } from './playwright/types.js';\n\nconst __dirname = dirname(fileURLToPath(import.meta.url));\n\n/**\n * Extract slide data from HTML page\n * This function runs in the browser context using helpers from the bundled ExtractSlideData\n */\nexport async function extractSlideData(page: Page): Promise<SlideData> {\n  const pkgDir = await packageDirectory({ cwd: __dirname });\n  if (!pkgDir) {\n    throw new Error('[@ant/html2pptx] Internal error, cannot find extraction script');\n  }\n\n  const scriptPath = join(pkgDir, './dist/playwright/index.iife.js');\n  await page.addScriptTag({ path: scriptPath });\n\n  return await page.evaluate(() => {\n    const { ExtractSlideData } = window as typeof window & {\n      ExtractSlideData: ExtractSlideDataType;\n    };\n    return ExtractSlideData.extractSlideDataInBrowser();\n  });\n}\n","/**\n * Slide building functions for html2pptx\n * These functions add elements to PowerPoint slides\n */\n\nimport type PptxGenJS from 'pptxgenjs';\nimport type { Slide, SlideData, TextOptions } from './types.js';\n\n/**\n * Add background to slide (image or color)\n */\nexport async function addBackground(\n  slideData: SlideData,\n  targetSlide: Slide,\n  _tmpDir: string\n): Promise<void> {\n  if (slideData.background.type === 'image' && slideData.background.path) {\n    let imagePath = slideData.background.path.startsWith('file://')\n      ? slideData.background.path.replace('file://', '')\n      : slideData.background.path;\n    targetSlide.background = { path: imagePath };\n  } else if (slideData.background.type === 'color' && slideData.background.value) {\n    targetSlide.background = { color: slideData.background.value };\n  }\n}\n\n/**\n * Add all elements to slide (images, shapes, text, lists)\n */\nexport function addElements(slideData: SlideData, targetSlide: Slide, pres: PptxGenJS): void {\n  for (const el of slideData.elements) {\n    if (el.type === 'image') {\n      let imagePath = el.src.startsWith('file://') ? el.src.replace('file://', '') : el.src;\n      targetSlide.addImage({\n        path: imagePath,\n        x: el.position.x,\n        y: el.position.y,\n        w: el.position.w,\n        h: el.position.h,\n      });\n    } else if (el.type === 'line') {\n      targetSlide.addShape(pres.ShapeType.line, {\n        x: el.x1,\n        y: el.y1,\n        w: el.x2 - el.x1,\n        h: el.y2 - el.y1,\n        line: { color: el.color, width: el.width },\n      });\n    } else if (el.type === 'shape') {\n      const shapeOptions: TextOptions = {\n        x: el.position.x,\n        y: el.position.y,\n        w: el.position.w,\n        h: el.position.h,\n      };\n\n      if (el.shape.fill) {\n        shapeOptions.fill = { color: el.shape.fill };\n        if (el.shape.transparency != null) shapeOptions.fill.transparency = el.shape.transparency;\n      }\n      if (el.shape.line) shapeOptions.line = el.shape.line;\n      if (el.shape.rectRadius > 0) shapeOptions.rectRadius = el.shape.rectRadius;\n      if (el.shape.shadow) shapeOptions.shadow = el.shape.shadow;\n\n      targetSlide.addText(el.text || '', shapeOptions);\n    } else if (el.type === 'list') {\n      const listOptions: TextOptions = {\n        x: el.position.x,\n        y: el.position.y,\n        w: el.position.w,\n        h: el.position.h,\n        fontSize: el.style.fontSize,\n        fontFace: el.style.fontFace,\n        color: el.style.color,\n        align: el.style.align as PptxGenJS.HAlign | undefined,\n        valign: 'top',\n        paraSpaceBefore: el.style.paraSpaceBefore,\n        paraSpaceAfter: el.style.paraSpaceAfter,\n      };\n      if (el.style.lineSpacing !== null && el.style.lineSpacing !== undefined) {\n        listOptions.lineSpacing = el.style.lineSpacing;\n      }\n      if (el.style.margin) listOptions.margin = el.style.margin;\n      targetSlide.addText(el.items, listOptions);\n    } else {\n      // Check if text is single-line (height suggests one line)\n      const lineHeight = el.style.lineSpacing || el.style.fontSize * 1.2;\n      const isSingleLine = el.position.h <= lineHeight * 1.5;\n\n      let adjustedX = el.position.x;\n      let adjustedW = el.position.w;\n\n      // Make single-line text 2% wider to account for underestimate\n      if (isSingleLine) {\n        const widthIncrease = el.position.w * 0.02;\n        const align = el.style.align;\n\n        if (align === 'center') {\n          // Center: expand both sides\n          adjustedX = el.position.x - widthIncrease / 2;\n          adjustedW = el.position.w + widthIncrease;\n        } else if (align === 'right') {\n          // Right: expand to the left\n          adjustedX = el.position.x - widthIncrease;\n          adjustedW = el.position.w + widthIncrease;\n        } else {\n          // Left (default): expand to the right\n          adjustedW = el.position.w + widthIncrease;\n        }\n      }\n\n      const textOptions: TextOptions = {\n        x: adjustedX,\n        y: el.position.y,\n        w: adjustedW,\n        h: el.position.h,\n        fontSize: el.style.fontSize,\n        fontFace: el.style.fontFace,\n        color: el.style.color,\n        bold: el.style.bold,\n        italic: el.style.italic,\n        valign: 'top',\n        paraSpaceBefore: el.style.paraSpaceBefore,\n        paraSpaceAfter: el.style.paraSpaceAfter,\n        inset: 0, // Remove default PowerPoint internal padding\n      };\n\n      if (el.style.underline) {\n        textOptions.underline = {\n          style: 'sng',\n          color: el.style.color,\n        };\n      }\n\n      if (el.style.lineSpacing !== null && el.style.lineSpacing !== undefined) {\n        textOptions.lineSpacing = el.style.lineSpacing;\n      }\n      if (el.style.align) textOptions.align = el.style.align as PptxGenJS.HAlign | undefined;\n      if (el.style.margin) textOptions.margin = el.style.margin;\n      if (el.style.rotate !== null && el.style.rotate !== undefined) {\n        textOptions.rotate = el.style.rotate;\n      }\n      if (el.style.transparency !== null && el.style.transparency !== undefined) {\n        textOptions.transparency = el.style.transparency;\n      }\n\n      targetSlide.addText(el.text, textOptions);\n    }\n  }\n}\n","import { chromium } from 'playwright';\nimport { access, readdir } from 'fs/promises';\nimport { join } from 'path';\n\n/**\n * Helper function to check if a file exists\n */\nasync function fileExists(path: string): Promise<boolean> {\n  try {\n    await access(path);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Determines the best path to a globally installed Chromium binary\n */\nexport async function getChromiumPath(): Promise<string> {\n  const executablePath = chromium.executablePath();\n\n  // Check if this executable exists\n  if (await fileExists(executablePath)) {\n    return executablePath;\n  }\n\n  // Parse the path to find the chromium-XXXX segment\n  const pathParts = executablePath.split('/');\n  const chromiumDirIndex = pathParts.findIndex((part) => part.startsWith('chromium-'));\n\n  if (chromiumDirIndex === -1) {\n    throw new Error(`Could not find chromium revision in path: ${executablePath}`);\n  }\n\n  const chromiumDirName = pathParts[chromiumDirIndex];\n  const expectedRevision = parseInt(chromiumDirName.replace('chromium-', ''), 10);\n\n  // Get the parent directory containing chromium-XXXX directories\n  const parentDir = pathParts.slice(0, chromiumDirIndex).join('/');\n\n  // Get the relative path after the chromium-XXXX directory\n  const relativePath = pathParts.slice(chromiumDirIndex + 1).join('/');\n\n  // Find all chromium-XXXX directories\n  let availableDirs: string[] = [];\n  try {\n    const entries = await readdir(parentDir);\n    availableDirs = entries.filter((dir) => dir.startsWith('chromium-'));\n  } catch (_error) {\n    throw new Error(`Could not read directory: ${parentDir}`);\n  }\n\n  if (availableDirs.length === 0) {\n    throw new Error(`No chromium installations found in: ${parentDir}`);\n  }\n\n  // Find the closest revision\n  let closestDiff = Infinity;\n  let closestPath = undefined;\n\n  for (const dir of availableDirs) {\n    const revision = parseInt(dir.replace('chromium-', ''), 10);\n    const diff = Math.abs(revision - expectedRevision);\n\n    if (diff < closestDiff) {\n      const candidatePath = join(parentDir, dir, relativePath);\n      if (await fileExists(candidatePath)) {\n        closestDiff = diff;\n        closestPath = candidatePath;\n      }\n    }\n  }\n\n  if (!closestPath) {\n    throw new Error(\n      `No valid chromium executable found. Tried ${availableDirs.length} alternatives.`\n    );\n  }\n\n  return closestPath;\n}\n","/**\n * html2pptx - Convert HTML slide to pptxgenjs slide with positioned elements\n *\n * USAGE:\n *   const pptx = new pptxgen();\n *   pptx.layout = 'LAYOUT_16x9';  // Must match HTML body dimensions\n *\n *   const { slide, placeholders } = await html2pptx('slide.html', pptx);\n *   slide.addChart(pptx.charts.LINE, data, placeholders[0]);\n *\n *   await pptx.writeFile('output.pptx');\n *\n * FEATURES:\n *   - Converts HTML to PowerPoint with accurate positioning\n *   - Supports text, images, shapes, and bullet lists\n *   - Extracts placeholder elements (class=\"placeholder\") with positions\n *   - Handles CSS gradients, borders, and margins\n *\n * VALIDATION:\n *   - Uses body width/height from HTML for viewport sizing\n *   - Throws error if HTML dimensions don't match presentation layout\n *   - Throws error if content overflows body (with overflow details)\n *\n * RETURNS:\n *   { slide, placeholders } where placeholders is an array of { id, x, y, w, h }\n *\n * @packageDocumentation\n */\n\nimport { chromium, type LaunchOptions } from 'playwright';\nimport path from 'path';\nimport type { PptxGenJS, Html2PptxOptions, Html2PptxResult } from './types.js';\nimport { getBodyDimensions, validateDimensions, validateTextBoxPosition } from './validation.js';\nimport { extractSlideData } from './extraction.js';\nimport { addBackground, addElements } from './slide-builder.js';\nimport { getChromiumPath } from './getChromiumPath.js';\n\n// Re-export types for consumers\nexport type {\n  PptxGenJS,\n  Slide,\n  Html2PptxOptions,\n  Html2PptxResult,\n  Placeholder,\n  ImageOptions,\n  TextOptions,\n  TextRun,\n  Shadow,\n} from './types.js';\n\nexport const Y = 5;\n\nexport async function html2pptx(\n  htmlFile: string,\n  pres: PptxGenJS,\n  options: Html2PptxOptions = {}\n): Promise<Html2PptxResult> {\n  const { tmpDir = process.env.TMPDIR || '/tmp', slide = null } = options;\n\n  try {\n    // Use Chrome on macOS, default Chromium on Unix\n    const launchOptions: LaunchOptions = {\n      env: { TMPDIR: tmpDir },\n      executablePath: await getChromiumPath(),\n    };\n    if (process.platform === 'darwin') {\n      launchOptions.channel = 'chrome';\n    }\n\n    const browser = await chromium.launch(launchOptions);\n\n    let bodyDimensions;\n    let slideData;\n\n    const filePath = path.isAbsolute(htmlFile) ? htmlFile : path.join(process.cwd(), htmlFile);\n    const validationErrors = [];\n\n    try {\n      const page = await browser.newPage();\n      page.on('console', (msg) => {\n        // Log the message text to your test runner's console\n        console.log(`Browser console: ${msg.text()}`);\n      });\n\n      await page.goto(`file://${filePath}`);\n\n      bodyDimensions = await getBodyDimensions(page);\n\n      await page.setViewportSize({\n        width: Math.round(bodyDimensions.width),\n        height: Math.round(bodyDimensions.height),\n      });\n\n      slideData = await extractSlideData(page);\n    } finally {\n      await browser.close();\n    }\n\n    // Collect all validation errors\n    if (bodyDimensions.errors && bodyDimensions.errors.length > 0) {\n      validationErrors.push(...bodyDimensions.errors);\n    }\n\n    const dimensionErrors = validateDimensions(bodyDimensions, pres);\n    if (dimensionErrors.length > 0) {\n      validationErrors.push(...dimensionErrors);\n    }\n\n    const textBoxPositionErrors = validateTextBoxPosition(slideData, bodyDimensions);\n    if (textBoxPositionErrors.length > 0) {\n      validationErrors.push(...textBoxPositionErrors);\n    }\n\n    if (slideData.errors && slideData.errors.length > 0) {\n      validationErrors.push(...slideData.errors);\n    }\n\n    // Throw all errors at once if any exist\n    if (validationErrors.length > 0) {\n      const errorMessage =\n        validationErrors.length === 1\n          ? validationErrors[0]\n          : `Multiple validation errors found:\\n${validationErrors.map((e, i) => `  ${i + 1}. ${e}`).join('\\n')}`;\n      throw new Error(errorMessage);\n    }\n\n    const targetSlide = slide || pres.addSlide();\n\n    await addBackground(slideData, targetSlide, tmpDir);\n    addElements(slideData, targetSlide, pres);\n\n    return { slide: targetSlide, placeholders: slideData.placeholders };\n  } catch (error) {\n    if (error instanceof Error && !error.message.startsWith(htmlFile)) {\n      throw new Error(`${htmlFile}: ${error.message}`);\n    }\n    throw error;\n  }\n}\n"],"names":["PT_PER_PX","PX_PER_IN","EMU_PER_IN","getBodyDimensions","page","bodyDimensions","body","style","errors","widthOverflowPx","heightOverflowPx","widthOverflowPt","heightOverflowPt","directions","reminder","validateDimensions","pres","widthInches","heightInches","layoutWidth","layoutHeight","validateTextBoxPosition","slideData","slideHeightInches","minBottomMargin","el","fontSize","bottomEdge","distanceFromBottom","getText","item","t","textPrefix","__dirname","dirname","fileURLToPath","_documentCurrentScript","extractSlideData","pkgDir","packageDirectory","scriptPath","join","ExtractSlideData","addBackground","targetSlide","_tmpDir","imagePath","addElements","shapeOptions","listOptions","lineHeight","isSingleLine","adjustedX","adjustedW","widthIncrease","align","textOptions","fileExists","path","access","getChromiumPath","executablePath","chromium","pathParts","chromiumDirIndex","part","chromiumDirName","expectedRevision","parentDir","relativePath","availableDirs","readdir","dir","closestDiff","closestPath","revision","diff","candidatePath","Y","html2pptx","htmlFile","options","tmpDir","slide","launchOptions","browser","filePath","validationErrors","msg","dimensionErrors","textBoxPositionErrors","errorMessage","e","i","error"],"mappings":"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"}